                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module blink
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; Stack segment in internal ram
                                     22 ;--------------------------------------------------------
                                     23 	.area	SSEG
      000000                         24 __start__stack:
      000000                         25 	.ds	1
                                     26 
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DABS (ABS)
                                     31 
                                     32 ; default segment ordering for linker
                                     33 	.area HOME
                                     34 	.area GSINIT
                                     35 	.area GSFINAL
                                     36 	.area CONST
                                     37 	.area INITIALIZER
                                     38 	.area CODE
                                     39 
                                     40 ;--------------------------------------------------------
                                     41 ; interrupt vector
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
      000000                         44 __interrupt_vect:
      000000 82v00u00u00             45 	int s_GSINIT ; reset
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area HOME
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
      000000                         53 __sdcc_init_data:
                                     54 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   55 	ldw x, #l_DATA
      000003 27 07            [ 1]   56 	jreq	00002$
      000005                         57 00001$:
      000005 72 4FuFFuFF      [ 1]   58 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   59 	decw x
      00000A 26 F9            [ 1]   60 	jrne	00001$
      00000C                         61 00002$:
      00000C AEr00r00         [ 2]   62 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   63 	jreq	00004$
      000011                         64 00003$:
      000011 D6uFFuFF         [ 1]   65 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   66 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   67 	decw	x
      000018 26 F7            [ 1]   68 	jrne	00003$
      00001A                         69 00004$:
                                     70 ; stm8_genXINIT() end
                                     71 	.area GSFINAL
      000000 CCr00r04         [ 2]   72 	jp	__sdcc_program_startup
                                     73 ;--------------------------------------------------------
                                     74 ; Home
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME
                                     77 	.area HOME
      000004                         78 __sdcc_program_startup:
      000004 CCr00r00         [ 2]   79 	jp	_main
                                     80 ;	return from main will return to caller
                                     81 ;--------------------------------------------------------
                                     82 ; code
                                     83 ;--------------------------------------------------------
                                     84 	.area CODE
                                     85 ;	blink.c: 5: void main() {
                                     86 ;	-----------------------------------------
                                     87 ;	 function main
                                     88 ;	-----------------------------------------
      000000                         89 _main:
                                     90 ;	blink.c: 7: PB_CR1= (1 << 5);
      000000 35 20 50 08      [ 1]   91 	mov	0x5008+0, #0x20
                                     92 ;	blink.c: 8: PB_DDR = (1 << 5);
      000004 35 20 50 07      [ 1]   93 	mov	0x5007+0, #0x20
                                     94 ;	blink.c: 10: while(1) {
      000008                         95 00103$:
                                     96 ;	blink.c: 11: PB_ODR ^= (1 << 5);
      000008 90 1A 50 05      [ 1]   97 	bcpl	0x5005, #5
                                     98 ;	blink.c: 12: for(int i = 0; i < 30000; i++){;}
      00000C 5F               [ 1]   99 	clrw	x
      00000D                        100 00106$:
      00000D A3 75 30         [ 2]  101 	cpw	x, #0x7530
      000010 2E F6            [ 1]  102 	jrsge	00103$
      000012 5C               [ 1]  103 	incw	x
      000013 20 F8            [ 2]  104 	jra	00106$
                                    105 ;	blink.c: 15: }
      000015 81               [ 4]  106 	ret
                                    107 	.area CODE
                                    108 	.area CONST
                                    109 	.area INITIALIZER
                                    110 	.area CABS (ABS)
