                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module i2c
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _i2c_init
                                     12 	.globl _i2c_start
                                     13 	.globl _i2c_stop
                                     14 	.globl _i2c_write
                                     15 	.globl _i2c_write_addr
                                     16 	.globl _i2c_read
                                     17 	.globl _i2c_read_arr
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area INITIALIZED
                                     26 ;--------------------------------------------------------
                                     27 ; absolute external ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DABS (ABS)
                                     30 
                                     31 ; default segment ordering for linker
                                     32 	.area HOME
                                     33 	.area GSINIT
                                     34 	.area GSFINAL
                                     35 	.area CONST
                                     36 	.area INITIALIZER
                                     37 	.area CODE
                                     38 
                                     39 ;--------------------------------------------------------
                                     40 ; global & static initialisations
                                     41 ;--------------------------------------------------------
                                     42 	.area HOME
                                     43 	.area GSINIT
                                     44 	.area GSFINAL
                                     45 	.area GSINIT
                                     46 ;--------------------------------------------------------
                                     47 ; Home
                                     48 ;--------------------------------------------------------
                                     49 	.area HOME
                                     50 	.area HOME
                                     51 ;--------------------------------------------------------
                                     52 ; code
                                     53 ;--------------------------------------------------------
                                     54 	.area CODE
                                     55 ;	../../lib/i2c.c: 4: void i2c_init() {
                                     56 ;	-----------------------------------------
                                     57 ;	 function i2c_init
                                     58 ;	-----------------------------------------
      008096                         59 _i2c_init:
                                     60 ;	../../lib/i2c.c: 5: I2C_FREQR = (1 << I2C_FREQR_FREQ1);
      008096 35 02 52 12      [ 1]   61 	mov	0x5212+0, #0x02
                                     62 ;	../../lib/i2c.c: 6: I2C_CCRL = 0x0A; // 100kHz
      00809A 35 0A 52 1B      [ 1]   63 	mov	0x521b+0, #0x0a
                                     64 ;	../../lib/i2c.c: 7: I2C_OARH = (1 << I2C_OARH_ADDMODE); // 7-bit addressing
      00809E 35 80 52 14      [ 1]   65 	mov	0x5214+0, #0x80
                                     66 ;	../../lib/i2c.c: 8: I2C_CR1 = (1 << I2C_CR1_PE);
      0080A2 35 01 52 10      [ 1]   67 	mov	0x5210+0, #0x01
                                     68 ;	../../lib/i2c.c: 9: }
      0080A6 81               [ 4]   69 	ret
                                     70 ;	../../lib/i2c.c: 11: void i2c_start() {
                                     71 ;	-----------------------------------------
                                     72 ;	 function i2c_start
                                     73 ;	-----------------------------------------
      0080A7                         74 _i2c_start:
                                     75 ;	../../lib/i2c.c: 12: I2C_CR2 |= (1 << I2C_CR2_START);
      0080A7 72 10 52 11      [ 1]   76 	bset	0x5211, #0
                                     77 ;	../../lib/i2c.c: 13: while (!(I2C_SR1 & (1 << I2C_SR1_SB)));
      0080AB                         78 00101$:
      0080AB 72 01 52 17 FB   [ 2]   79 	btjf	0x5217, #0, 00101$
                                     80 ;	../../lib/i2c.c: 14: }
      0080B0 81               [ 4]   81 	ret
                                     82 ;	../../lib/i2c.c: 16: void i2c_stop() {
                                     83 ;	-----------------------------------------
                                     84 ;	 function i2c_stop
                                     85 ;	-----------------------------------------
      0080B1                         86 _i2c_stop:
                                     87 ;	../../lib/i2c.c: 17: I2C_CR2 |= (1 << I2C_CR2_STOP);
      0080B1 72 12 52 11      [ 1]   88 	bset	0x5211, #1
                                     89 ;	../../lib/i2c.c: 18: while (I2C_SR3 & (1 << I2C_SR3_MSL));
      0080B5                         90 00101$:
      0080B5 72 00 52 19 FB   [ 2]   91 	btjt	0x5219, #0, 00101$
                                     92 ;	../../lib/i2c.c: 19: }
      0080BA 81               [ 4]   93 	ret
                                     94 ;	../../lib/i2c.c: 21: void i2c_write(uint8_t data) {
                                     95 ;	-----------------------------------------
                                     96 ;	 function i2c_write
                                     97 ;	-----------------------------------------
      0080BB                         98 _i2c_write:
                                     99 ;	../../lib/i2c.c: 22: I2C_DR = data;
      0080BB C7 52 16         [ 1]  100 	ld	0x5216, a
                                    101 ;	../../lib/i2c.c: 23: while (!(I2C_SR1 & (1 << I2C_SR1_TXE)));
      0080BE                        102 00101$:
      0080BE C6 52 17         [ 1]  103 	ld	a, 0x5217
      0080C1 2A FB            [ 1]  104 	jrpl	00101$
                                    105 ;	../../lib/i2c.c: 24: }
      0080C3 81               [ 4]  106 	ret
                                    107 ;	../../lib/i2c.c: 26: void i2c_write_addr(uint8_t addr) {
                                    108 ;	-----------------------------------------
                                    109 ;	 function i2c_write_addr
                                    110 ;	-----------------------------------------
      0080C4                        111 _i2c_write_addr:
                                    112 ;	../../lib/i2c.c: 27: I2C_DR = addr;
      0080C4 C7 52 16         [ 1]  113 	ld	0x5216, a
                                    114 ;	../../lib/i2c.c: 28: while (!(I2C_SR1 & (1 << I2C_SR1_ADDR)));
      0080C7                        115 00101$:
      0080C7 72 03 52 17 FB   [ 2]  116 	btjf	0x5217, #1, 00101$
                                    117 ;	../../lib/i2c.c: 29: (void) I2C_SR3; // check BUS_BUSY
      0080CC C6 52 19         [ 1]  118 	ld	a, 0x5219
                                    119 ;	../../lib/i2c.c: 30: I2C_CR2 |= (1 << I2C_CR2_ACK);
      0080CF 72 14 52 11      [ 1]  120 	bset	0x5211, #2
                                    121 ;	../../lib/i2c.c: 31: }
      0080D3 81               [ 4]  122 	ret
                                    123 ;	../../lib/i2c.c: 33: uint8_t i2c_read() {
                                    124 ;	-----------------------------------------
                                    125 ;	 function i2c_read
                                    126 ;	-----------------------------------------
      0080D4                        127 _i2c_read:
                                    128 ;	../../lib/i2c.c: 34: I2C_CR2 &= ~(1 << I2C_CR2_ACK);
      0080D4 72 15 52 11      [ 1]  129 	bres	0x5211, #2
                                    130 ;	../../lib/i2c.c: 35: i2c_stop();
      0080D8 CD 80 B1         [ 4]  131 	call	_i2c_stop
                                    132 ;	../../lib/i2c.c: 36: while (!(I2C_SR1 & (1 << I2C_SR1_RXNE)));
      0080DB                        133 00101$:
      0080DB 72 0D 52 17 FB   [ 2]  134 	btjf	0x5217, #6, 00101$
                                    135 ;	../../lib/i2c.c: 37: return I2C_DR;
      0080E0 C6 52 16         [ 1]  136 	ld	a, 0x5216
                                    137 ;	../../lib/i2c.c: 38: }
      0080E3 81               [ 4]  138 	ret
                                    139 ;	../../lib/i2c.c: 40: void i2c_read_arr(uint8_t *buf, int len) {
                                    140 ;	-----------------------------------------
                                    141 ;	 function i2c_read_arr
                                    142 ;	-----------------------------------------
      0080E4                        143 _i2c_read_arr:
      0080E4 52 02            [ 2]  144 	sub	sp, #2
      0080E6 1F 01            [ 2]  145 	ldw	(0x01, sp), x
                                    146 ;	../../lib/i2c.c: 41: while (len-- > 1) {
      0080E8                        147 00104$:
      0080E8 16 05            [ 2]  148 	ldw	y, (0x05, sp)
      0080EA 93               [ 1]  149 	ldw	x, y
      0080EB 5A               [ 2]  150 	decw	x
      0080EC 1F 05            [ 2]  151 	ldw	(0x05, sp), x
      0080EE 90 A3 00 01      [ 2]  152 	cpw	y, #0x0001
      0080F2 2D 16            [ 1]  153 	jrsle	00106$
                                    154 ;	../../lib/i2c.c: 42: I2C_CR2 |= (1 << I2C_CR2_ACK);
      0080F4 72 14 52 11      [ 1]  155 	bset	0x5211, #2
                                    156 ;	../../lib/i2c.c: 43: while (!(I2C_SR1 & (1 << I2C_SR1_RXNE)));
      0080F8                        157 00101$:
      0080F8 72 0D 52 17 FB   [ 2]  158 	btjf	0x5217, #6, 00101$
                                    159 ;	../../lib/i2c.c: 44: *(buf++) = I2C_DR;
      0080FD C6 52 16         [ 1]  160 	ld	a, 0x5216
      008100 1E 01            [ 2]  161 	ldw	x, (0x01, sp)
      008102 F7               [ 1]  162 	ld	(x), a
      008103 1E 01            [ 2]  163 	ldw	x, (0x01, sp)
      008105 5C               [ 1]  164 	incw	x
      008106 1F 01            [ 2]  165 	ldw	(0x01, sp), x
      008108 20 DE            [ 2]  166 	jra	00104$
      00810A                        167 00106$:
                                    168 ;	../../lib/i2c.c: 46: *buf = i2c_read();
      00810A CD 80 D4         [ 4]  169 	call	_i2c_read
      00810D 1E 01            [ 2]  170 	ldw	x, (0x01, sp)
      00810F F7               [ 1]  171 	ld	(x), a
                                    172 ;	../../lib/i2c.c: 47: }
      008110 1E 03            [ 2]  173 	ldw	x, (3, sp)
      008112 5B 06            [ 2]  174 	addw	sp, #6
      008114 FC               [ 2]  175 	jp	(x)
                                    176 	.area CODE
                                    177 	.area CONST
                                    178 	.area INITIALIZER
                                    179 	.area CABS (ABS)
